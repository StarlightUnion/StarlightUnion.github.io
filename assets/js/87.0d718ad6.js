(window.webpackJsonp=window.webpackJsonp||[]).push([[87],{779:function(s,t,a){"use strict";a.r(t);var n=a(39),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"【每日一题】392-判断子序列"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#【每日一题】392-判断子序列"}},[s._v("#")]),s._v(" 【每日一题】392 判断子序列")]),s._v(" "),t("ClientOnly",[t("display-bar",{attrs:{displayData:s.$frontmatter}})],1),s._v(" "),t("blockquote",[t("p",[s._v("题目地址："),t("a",{attrs:{href:"https://leetcode-cn.com/problems/is-subsequence/",target:"_blank",rel:"noopener noreferrer"}},[s._v("392. 判断子序列"),t("OutboundLink")],1)])]),s._v(" "),t("blockquote",[t("p",[t("strong",[s._v("题意：")])]),s._v(" "),t("p",[s._v("给定字符串 s 和 t ，判断 s 是否为 t 的子序列。")]),s._v(" "),t("p",[s._v("你可以认为 s 和 t 中仅包含英文小写字母。字符串 t 可能会很长（长度 ~= 500,000），而 s 是个短字符串（长度 <=100）。")]),s._v(" "),t("p",[s._v('字符串的一个子序列是原始字符串删除一些（也可以不删除）字符而不改变剩余字符相对位置形成的新字符串。（例如，"ace"是"abcde"的一个子序列，而"aec"不是）。')]),s._v(" "),t("p",[t("strong",[s._v("示例1：")])]),s._v(" "),t("p",[t("strong",[s._v("s")]),s._v(" = "),t("code",[s._v('"abc"')]),s._v(", "),t("strong",[s._v("t")]),s._v(" = "),t("code",[s._v('"ahbgdc"')])]),s._v(" "),t("p",[s._v("返回 "),t("code",[s._v("true")]),s._v(".")]),s._v(" "),t("p",[t("strong",[s._v("示例 2:")])]),s._v(" "),t("p",[t("strong",[s._v("s")]),s._v(" = "),t("code",[s._v('"axc"')]),s._v(", "),t("strong",[s._v("t")]),s._v(" = "),t("code",[s._v('"ahbgdc"')])]),s._v(" "),t("p",[s._v("返回 "),t("code",[s._v("false")]),s._v(".")]),s._v(" "),t("p",[t("strong",[s._v("后续挑战 :")])]),s._v(" "),t("p",[s._v("如果有大量输入的 S，称作S1, S2, ... , Sk 其中 k >= 10亿，你需要依次检查它们是否为 T 的子序列。在这种情况下，你会怎样改变代码？")])]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n * @param {string} s\n * @param {string} t\n * @return {boolean}\n */")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("isSubsequence")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("s"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" t")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("p",[s._v("施工中🚧...")])],1)}),[],!1,null,null,null);t.default=e.exports}}]);